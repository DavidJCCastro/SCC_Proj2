apiVersion: apps/v1
kind: Deployment
metadata:
  name: tukano-app
  labels:
    app: tukano-app
spec:
  replicas: 1  # Number of Pod instances
  selector:
    matchLabels:
      app: tukano-app
  template:
    metadata:
      labels:
        app: tukano-app
    spec:
      containers:
      - name: tukano-container
        image: tukano-app:latest  # Name of the Docker image
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080    # Port inside the container
        env:
        - name: DB_URL        # Optional : env variables
          value: jdbc:postgresql://postgres-service:5432/tukano
        - name: DB_USER
          value: postgres
        - name: DB_PASSWORD
          value: secret
        - name: S3_ENDPOINT   # MinIO endpoint URL
          value: http://minio-service:9000
        - name: S3_ACCESS_KEY 
          value: minioadmin
        - name: S3_SECRET_KEY  
          value: minioadmin
        - name: S3_BUCKET
          value: tukano-blobs
        - name: REDIS_HOSTNAME
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: CACHE_STATUS
          value: "ON"
        - name: REDIS_USE_TLS
          value: "false"

---

apiVersion: v1
kind: Service
metadata:
  name: tukano-service
spec:
  selector:
    app: tukano-app  # Matches the label in deployment.yaml
  ports:
  - protocol: TCP
    port: 80          # Port exposed to the host
    targetPort: 8080  # Port inside the container
  type: NodePort      # Exposes the service on a Node's IP and a specific port
